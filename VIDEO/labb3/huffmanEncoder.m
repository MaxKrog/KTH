function [ binaryVector ] = huffmanEncoder( imgBW, codeBook )
%%
%This function encodes a black n white image into a single binary vector
% Input: 'bwImg' is black image, e.g. a Y frame of a YUV image
%        'CodeBook', is the codebook/dictionary generated by huffmanCodebook

% Output: encoded bwImg, a binary vector formed by concatenated huffman codewords 

[height, width] = size(imgBW);

placeholder = cell(height, width);

for i = 1: length(codeBook)
    codeWord = codeBook(i, 2);          %The codeWord we are gonna substitute with
    logical = imgBW == codeBook{i,1};   %Logical matrix that only targets the pixels where the values are equal.
    placeholder(logical) = codeWord;    %Replace with codeWord
end

binaryVector = reshape(placeholder, 1, []); %Reshape to vector
binaryVector = cell2mat(binaryVector);      %Get rid of type 'cell'.



